@page "/verifyState"
@using DocBrown.Domain;

@inject HttpClient Http

<PageTitle>Verify State</PageTitle>

<h1>Verify Service State</h1>

<p role="status">Service State State: </p>

<p role="status">Status do servidor: @serverResponse</p>


<form>
	<div class="form-group">
		<label for="date">Date:</label>
		<input type="date" class="form-control" id="date" @bind="forecast.Date" />
	</div>
	<div class="form-group">
		<label for="temperature">Temperature (C):</label>
		<input type="number" class="form-control" id="temperature" @bind="forecast.TemperatureC" />
	</div>
	<div class="form-group">
		<label for="summary">Summary:</label>
		<input type="text" class="form-control" id="summary" @bind="forecast.Summary" />
	</div>
	<button class="btn btn-primary" @onclick="saveForecast">Salvar</button>
</form>
<br />

@code {

	private WeatherForecast forecast = new WeatherForecast();
	private string serverResponse;

	private async Task saveForecast()
	{
		// Faz o POST do objeto WeatherForecast para o controller ForecastState
		var response = await Http.PostAsJsonAsync("ForecastState", forecast);

		if (response.IsSuccessStatusCode)
		{
			serverResponse = "Estado do serviço verificado com sucesso!";
		}
		else
		{
			serverResponse = "Falha ao verificar o estado do serviço.";
		}
	}

	private void verifyServiceState()
	{
		serverResponse = "não verificado";
	}
}
